import pandas as pd
import yfinance as y
import numpy as np
import plotly.graph_objects as go
from statsmodels.tsa.arima.model import ARIMA

# =========================
# 1) Baixar histórico do dólar em reais
# =========================
usdbrl = y.Ticker('USDBRL=X').history(period='max')[['Close']].rename(columns={'Close':'USD/BRL'})
df = usdbrl.reset_index()

# =========================
# 2) Função de projeção ARIMA
# =========================
def projecao_arima(dados, col_name, meses=12, conserv=0.05):
    steps = int(meses * 21)  # ~21 pregões/mês
    
    serie = dados[col_name]
    model = ARIMA(serie, order=(1,1,1))  
    model_fit = model.fit()
    
    forecast = model_fit.get_forecast(steps=steps)
    mean_forecast = forecast.predicted_mean
    conf_int = forecast.conf_int(alpha=0.2)  
    
    future_dates = pd.date_range(dados['Date'].iloc[-1], periods=steps, freq='B')

    # faixa conservadora ±5%
    y_future = mean_forecast.values
    upper_cons = y_future * (1 + conserv)
    lower_cons = y_future * (1 - conserv)

    return future_dates, mean_forecast, conf_int, upper_cons, lower_cons

# =========================
# 3) Projeção
# =========================
meses_proj = 12  
dates_usd, base_usd, ci_usd, up_cons_usd, low_cons_usd = projecao_arima(df, 'USD/BRL', meses=meses_proj)

# =========================
# 4) Gráfico interativo
# =========================
fig = go.Figure()

# Histórico
fig.add_trace(go.Scatter(
    x=df['Date'], y=df['USD/BRL'],
    mode='lines', name='Histórico USD/BRL',
    line=dict(color='#64F5D2')
))

# Projeção base
fig.add_trace(go.Scatter(
    x=dates_usd, y=base_usd,
    mode='lines', name='Projeção ARIMA',
    line=dict(color='gray', dash='dash')
))

# Faixa IC 80%
fig.add_trace(go.Scatter(x=dates_usd, y=ci_usd.iloc[:,1],
                         mode='lines', line=dict(width=0), showlegend=False))
fig.add_trace(go.Scatter(x=dates_usd, y=ci_usd.iloc[:,0],
                         mode='lines', line=dict(width=0),
                         fill='tonexty', fillcolor='rgba(128,128,128,0.3)',
                         name='Faixa (IC 80%)'))

# Faixa conservadora ±5%
fig.add_trace(go.Scatter(x=dates_usd, y=up_cons_usd,
                         mode='lines', line=dict(width=0), showlegend=False))
fig.add_trace(go.Scatter(x=dates_usd, y=low_cons_usd,
                         mode='lines', line=dict(width=0),
                         fill='tonexty', fillcolor='rgba(0,0,0,0.1)',
                         name='Faixa Conservadora (±5%)'))

# =========================
# 5) Layout final com zoom/slider
# =========================
fig.update_layout(
    title=f"Dólar (USD/BRL) — Histórico completo e Projeção em R$ (Próximos {meses_proj} meses)",
    hovermode="x unified",
    template="plotly_white",
    legend=dict(bgcolor="rgba(255,255,255,0.8)", font=dict(color="black")),
    xaxis=dict(
        rangeselector=dict(
            buttons=list([
                dict(count=1, label="1m", step="month", stepmode="backward"),
                dict(count=6, label="6m", step="month", stepmode="backward"),
                dict(count=1, label="1a", step="year", stepmode="backward"),
                dict(step="all")
            ])
        ),
        rangeslider=dict(visible=True),
        type="date"
    )
)

fig.show()
